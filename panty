#!/bin/bash

##############################################################
# .-,--.   ,.  ,-,-.  ,--,--'.  .       ,.  ,-,-.   .-,--.   #
#  '|__/  / |  ` | |  `- |   |  |      / |  ` | |   ' |   \  #
#  ,|    /~~|-.  | |-. , |   |  |     /~~|-.  | |-. , |   /  #
#  `'  ,'   `-' ,' `-' `-'   `--|   ,'   `-' ,' `-' `-^--'   #
#                            .- |                            #
#                            `--'                            #
# .---. ,--,--',,--.  ,--. ,-, , ,-_/ ,-,-.   ,---.          #
# \___  `- |   |`, | | `-'  )|/  '  | ` | |   |  -'          #
#     \  , |   |   | |   .   |\  .^ |   | |-. |  ,-'         #
# `---'  `-'   `---' `--'   ,' ` `--'  ,' `-' `---|          #
#                                              ,-.|          #
#                                              `-+'          #
##############################################################


inotify_event_delay=0.3
debug=1

queue_file=/tmp/xmosh/panty-queue
at_start=$(date '+%N')


function die () {
  echo "$1" 2>&1
  exit 1
}

function get_role () {
  local window="$1"
  xprop -id "$window" -f WM_WINDOW_ROLE 8s WM_WINDOW_ROLE | sed 's/[^"]*"//' | sed 's/"$//' | grep -v 'not found'
}

function is_stocking () {
  local window="$1"
  local role="$(get_role "$window")"
  [ "$role" = 'STOCKING' ]
}

function wait_for_x () {
  [ "$debug" -eq 1 ] && echo 'wait_for_x'

  while true
  do
    sleep 1
    &>1 xprop -root > /dev/null && return
  done
}

function initialize_queue_file () {
  if [ ! -e "$queue_file" ]
  then
    local dir="$(dirname "$queue_file")"
    mkdir -p "$dir" || die "Could not create $dir"
    mkfifo "$queue_file" || die "Could not create $queue_file"
  fi
}

function pull () {
  local window="$1"

  # xc pull "$window"

  local desktop="$(xdotool get_desktop)"
  xdotool set_desktop_for_window "$window" "$desktop"
}

function nude () {
  local self="$$"
  local pids=`pgrep --exact "$(basename "$0")"`
  kill $(echo "$pids" | fgrep --line-regexp -v "$self")
}

function undress () {
  xdotool search --class gvim | while read window
  do
    is_stocking "$window" && xdotool windowkill "$window"
  done
}


function main_stocker () {
  wait_for_x

  local window="$(gvim --echo-wid --servername 'STOCKING' --role 'STOCKING' | head -n 1 | sed 's/.*: //')"

  [ "$debug" -eq 1 ] && echo "spawn: $window"
  echo "$window" > "$queue_file"

  main_stocker
}

function main_summon () {
  local window="$(head -n 1 "$queue_file")"

  local OPTION
  while getopts 'r:' OPTION
  do
    case "$OPTION" in
      r) OPT_ROLE="$OPTARG" ;;
    esac
  done
  shift $(($OPTIND - 1))

  pull "$window"

  # Send file names
  [ "$#" -gt 0 ] && gvim --servername 'STOCKING' --remote "$@"

  if [ "$debug" -eq 1 ]
  then
    at_summoned=$(date '+%N')
    echo -n "summon: role = $OPT_ROLE, time = "
    expr \( $at_summoned - $at_start \) / 1000 / 1000
  fi

  # Stocking becomes panty
  xdotool set_window --role "${OPT_ROLE:-PANTY}" "$window"
}

function main_watcher () {
  if [ "${#@}" -eq 0 ]
  then
    local targets=(~/.vimrc ~/.vim)
  else
    local targets=("$@")
  fi

  wait_for_x

  [ "$debug" -eq 1 ] && echo "watcher: ${targets[@]}"

  inotifywait -e move,delete,close_write  -r "${targets[@]}"
  sleep "$inotify_event_delay"

  main_kill

  main_watcher "$@"
}

function main_kill () {
  nude
  undress
}

function main_init () {
  local log_file="${1:-/dev/null}"

  main_kill
  setsid panty stocker >> "$log_file" 2>&1 &
  setsid panty watcher >> "$log_file" 2>&1 &
}


function main () {
  local sub="$1"
  shift

  initialize_queue_file

  if [ -n "$sub" ] && type "main_$sub" &> /dev/null
  then
    "main_$sub" "$@"
    exit 0
  fi

  exec 2>&1
  echo 'Usage: panty summon [-r <ROLE>] <GVIM ARGS>....'
  echo '       panty stocker'
  echo '       panty watcher'
  echo '       panty kill'
  echo '       panty init [<LOGFILE>]'
  exit 1
}

main "$@"
